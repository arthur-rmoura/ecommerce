/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (4.2.3).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package io.github.arthurrmoura.api.spec;

import io.github.arthurrmoura.model.Pedido;
import io.github.arthurrmoura.model.Retorno;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2020-08-10T14:24:51.240-03:00[America/Sao_Paulo]")

@Validated
@Api(value = "pedidos", description = "the pedidos API")
public interface PedidosApi {

    default PedidosApiDelegate getDelegate() {
        return new PedidosApiDelegate() {};
    }

    /**
     * GET /pedidos : ListarPedidos
     * Lista todos os pedidos conforme o filtro de status da entrega
     *
     * @param statusEntrega Filtro de status a ser aplicado na listagem (required)
     * @return OK (status code 200)
     *         or No Content (status code 204)
     *         or Bad Request (status code 400)
     *         or Internal Server Error (status code 500)
     */
    @ApiOperation(value = "ListarPedidos", nickname = "listarPedidos", notes = "Lista todos os pedidos conforme o filtro de status da entrega", response = Pedido.class, responseContainer = "List", authorizations = {
        @Authorization(value = "client_id")
    }, tags={ "Pedidos", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = Pedido.class, responseContainer = "List"),
        @ApiResponse(code = 204, message = "No Content", response = Object.class),
        @ApiResponse(code = 400, message = "Bad Request", response = Retorno.class),
        @ApiResponse(code = 500, message = "Internal Server Error", response = Retorno.class) })
    @RequestMapping(value = "/pedidos",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<List<Pedido>> listarPedidos(@NotNull @ApiParam(value = "Filtro de status a ser aplicado na listagem", required = true) @Valid @RequestParam(value = "status-entrega", required = true) String statusEntrega) {
        return getDelegate().listarPedidos(statusEntrega);
    }

}
