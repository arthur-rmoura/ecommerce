/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (4.2.3).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package io.reflectoring.api;

import io.reflectoring.model.Produto;
import io.reflectoring.model.Retorno;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2020-08-12T18:44:16.882-03:00[America/Sao_Paulo]")

@Validated
@Api(value = "produtos", description = "the produtos API")
public interface ProdutosApi {

    default ProdutosApiDelegate getDelegate() {
        return new ProdutosApiDelegate() {};
    }

    /**
     * GET /produtos : ListarProdutos
     * Lista todos os produtos
     *
     * @return OK (status code 200)
     *         or No Content (status code 204)
     *         or Bad Request (status code 400)
     *         or Internal Server Error (status code 500)
     */
    @ApiOperation(value = "ListarProdutos", nickname = "listarProdutos", notes = "Lista todos os produtos", response = Produto.class, responseContainer = "List", tags={ "Produtos", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = Produto.class, responseContainer = "List"),
        @ApiResponse(code = 204, message = "No Content", response = Object.class),
        @ApiResponse(code = 400, message = "Bad Request", response = Retorno.class),
        @ApiResponse(code = 500, message = "Internal Server Error", response = Retorno.class) })
    @RequestMapping(value = "/produtos",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<List<Produto>> listarProdutos() {
        return getDelegate().listarProdutos();
    }

}
